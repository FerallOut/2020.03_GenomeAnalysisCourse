LnL(Js)=	-207.497102
LnL(Ks)	=-204.494923
LnL(Rs)	=-192.634719
LnL_Js=	-207.497102
LnL_Ks	=-204.494923
LnL_Rs	=-192.634719
LR_JK_s <- 2 * (LnL_Ks-LnL_Js)
LR_KR_s <- 2 * (LnL_Rs-LnL_Ks)
LRT_JK <- pchisq(q = LR_JK_s, df = 1, lower.tail = FALSE)
LnL_K80 =	-207.497102
LnL_JC69	=-204.494923
LR_K80_JC69 <- 2 * (LnL_K80 - LnL_JC69)
#LR_KR_s <- 2 * (LnL_Rs-LnL_Ks)
LRT_K80_JC69 <- pchisq(q = LR_K80_JC69, df = 1, lower.tail = FALSE)
LnL_Js=	-207.497102
LnL_Ks	=-204.494923
LnL_Rs	=-192.634719
LR_JK_s <- 2 * (LnL_Ks-LnL_Js)
LR_KR_s <- 2 * (LnL_Rs-LnL_Ks)
LRT_JK <- pchisq(q = LR_JK_s, df = 1, lower.tail = FALSE)
LnL_JC69=	-207.497102
LnL_K80	=-204.494923
#LnL_Rs	=-192.634719
LR_K80_JC69 <- 2 * (LnL_K80-LnL_JC69)
#LR_KR_s <- 2 * (LnL_Rs-LnL_Ks)
LRT_K80_JC69 <- pchisq(q = LR_K80_JC69, df = 1, lower.tail = FALSE)
LnL_JC69=	-207.497102     # model A
LnL_K80	=-204.494923      # model B
LnL_REV	=-192.634719	    # model C
LR_K80_JC69 <- 2 * (LnL_K80 - LnL_JC69)
LR_REV_K80 <- 2 * (LnL_REV - LnL_K80)
LRT_K80_JC69 <- pchisq(q = LR_K80_JC69, df = 1, lower.tail = FALSE)
LRT_REV_K80 <- pchisq(q = LR_REV_K80, df = 4, lower.tail = FALSE)
LnL_JC69 =	-3566.384298     # model A
LnL_K80	= -3344.009028      # model B
LnL_REV	= -3337.718620	    # model C
LR_K80_JC69 <- 2 * (LnL_K80 - LnL_JC69)
LR_REV_K80 <- 2 * (LnL_REV - LnL_K80)
LRT_K80_JC69 <- pchisq(q = LR_K80_JC69, df = 1, lower.tail = FALSE)
LRT_REV_K80 <- pchisq(q = LR_REV_K80, df = 4, lower.tail = FALSE)
LRT_REV_K80 <- pchisq(q = LR_REV_K80, df = 10, lower.tail = FALSE)
LRT_REV_K80 <- pchisq(q = LR_REV_K80, df = 12, lower.tail = FALSE)
LnL_A =	-3566.384298     # model A
LnL_B	= -3344.009028      # model B
LnL_C	= -3337.718620	    # model C
LR_B_A <- 2 * (LnL_B - LnL_A)
LR_C_B <- 2 * (LnL_C - LnL_B)
LRT_B_A <- pchisq(q = LR_B_A, df = 1, lower.tail = FALSE)
LRT_C_B <- pchisq(q = LR_C_B, df = 12, lower.tail = FALSE)
LnL_D =	-3309.687133    # model D
LnL_D_0	= -3309.687131     # model D_0
LR_D_D_0 <- 2 * (LnL_D - LnL_D_0)
LRT_D_D_0 <- pchisq(q = LR_D_D_0, df = 1, lower.tail = FALSE)
LnL_D =	-3309.687133    # model D
LnL_D_null	= -3309.687131     # model D_0
LR_D_D_null <- 2 * (LnL_D - LnL_D_null)
LRT_D_D_null <- pchisq(q = LR_D_D_null, df = 1, lower.tail = FALSE)
LR_D_D_null <- 2 * (LnL_D_null - LnL_D)
LRT_D_D <- pchisq(q = LR_D_D_null, df = 1, lower.tail = FALSE)
LnL_D =	-3309.687133           # model D
LnL_D_null	= -3309.687131     # model D_0
LR_D_D_null <- 2 * (LnL_D - LnL_D_null)
LRT_D_D_null <- pchisq(q = LR_D_D_null, df = 1, lower.tail = FALSE)
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_second')
BHI_1 <- read.table("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'count_BHI_1'))
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_second')
BHI_1 <- read.table("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'count_BHI_1'))
BHI_2 <- read.table("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'count_BHI_2'))
BHI_3 <- read.table("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'count_BHI_3'))
View(BHI_1)
View(BHI_2)
View(BHI_3)
Ser_1 <- read.table("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'count_ser_1'))
Ser_2 <- read.table("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'count_ser_2'))
Ser_3 <- read.table("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'count_ser_3'))
expData <- data.frame(bh1, bh2, bh3, serum1, serum2, serum3)
expData <- data.frame(bh1, bh2, bh3, serum1, serum2, serum3)
expData <- data.frame(BHI_1, BHI_2, BHI_3, Ser_1, Ser_2, Ser_3)
View(expData)
totalReads <- colSums(expData)
notAlignedReads <- expData["__not_aligned",]
AlignedReads <- totalReads - notAlignedReads
View(expData)
View(AlignedReads)
View(notAlignedReads)
AverallTotalReads <- sum(totalReads)
AverallNotAlignedReads <- sum(notAlignedReads)
AverallAlignedReads <- sum(AlignedReads)
PercentOverallAlignedReads <- AverallAlignedReads * 100 / AverallTotalReads
PercentOverallAlignedReads
n<-dim(expData)[1]
lenMatrix<-dim(expData)[1]
ReadsFeatures<-expData[1:(lenMatrix-5),]
View(ReadsFeatures)
OverallTotalReadsFeatures <- sum(colSums(ReadsFeatures))
PercentReadsFeatures <- AverallTotalReadsFeatures * 100 / AverallTotalReads
PercentReadsFeatures
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_second')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.table("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'count_BHI_1'))
BHI_2 <- read.table("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'count_BHI_2'))
BHI_3 <- read.table("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'count_BHI_3'))
Ser_1 <- read.table("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'count_ser_1'))
Ser_2 <- read.table("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'count_ser_2'))
Ser_3 <- read.table("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'count_ser_3'))
expData <- data.frame(BHI_1, BHI_2, BHI_3, Ser_1, Ser_2, Ser_3)
#######
# get number of aligned reads for each experiment
totalReads <- colSums(expData)
notAlignedReads <- expData["__not_aligned",]
AlignedReads <- totalReads - notAlignedReads
#######
# get number of aligned reads in total
OverallTotalReads <- sum(totalReads)
OverallNotAlignedReads <- sum(notAlignedReads)
OverallAlignedReads <- sum(AlignedReads)
########
# percentual calculation of the overall number of reads that has mapped to the reference
PercentOverallAlignedReads <- OverallAlignedReads * 100 / OverallTotalReads
PercentOverallAlignedReads
##############
lenMatrix<-dim(expData)[1]
ReadsFeatures<-expData[1:(lenMatrix-5),]
OverallTotalReadsFeatures <- sum(colSums(ReadsFeatures))
PercentReadsFeatures <- AverallTotalReadsFeatures * 100 / AverallTotalReads
PercentReadsFeatures <- OverallTotalReadsFeatures * 100 / OverallTotalReads
PercentReadsFeatures
OverallNoFeatures <- sum(expData["__no_feature",])
OverallNoFeatures
View(expData)
write.csv(expData, "Matrix_reads.csv", row.names=T)
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_second')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.table("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'count_BHI_1', 'gene_name'))
BHI_2 <- read.table("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'count_BHI_2', 'gene_name'))
BHI_3 <- read.table("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'count_BHI_3', 'gene_name'))
Ser_1 <- read.table("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'count_ser_1', 'gene_name'))
Ser_2 <- read.table("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'count_ser_2', 'gene_name'))
Ser_3 <- read.table("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'count_ser_3', 'gene_name'))
expData <- data.frame(BHI_1, BHI_2, BHI_3, Ser_1, Ser_2, Ser_3)
write.csv(expData, "Matrix_reads_gene.csv", row.names=T)
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.table("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'count_BHI_1', 'gene_name'))
BHI_2 <- read.table("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'count_BHI_2', 'gene_name'))
BHI_3 <- read.table("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'count_BHI_3', 'gene_name'))
Ser_1 <- read.table("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'count_ser_1', 'gene_name'))
Ser_2 <- read.table("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'count_ser_2', 'gene_name'))
Ser_3 <- read.table("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'count_ser_3', 'gene_name'))
expData <- data.frame(BHI_1, BHI_2, BHI_3, Ser_1, Ser_2, Ser_3)
write.csv(expData, "Matrix_reads_gene.csv", row.names=T)
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
BHI_1 <- read.table("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'count_BHI_1', 'gene_name'))
BHI_2 <- read.table("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'count_BHI_2', 'gene_name'))
BHI_3 <- read.table("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'count_BHI_3', 'gene_name'))
Ser_1 <- read.table("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'count_ser_1', 'gene_name'))
Ser_2 <- read.table("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'count_ser_2', 'gene_name'))
Ser_3 <- read.table("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'count_ser_3', 'gene_name'))
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
BHI_1 <- read.table("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'))
BHI_2 <- read.table("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_2'))
BHI_3 <- read.table("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_3'))
BHI_1 <- read.table("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), na.strings = c("")
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.table("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), na.strings = c(""))
BHI_1 <- read.table("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), na.strings = "")
BHI_1 <- read.table("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), na = c("")
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.table("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), na = c(""))
BHI_1 <- read.table("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), na.strings = "NA")
BHI_1 <- read.table("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), na.strings = "NA", fill = TRUE)
BHI_2 <- read.table("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_2'), na.strings = "NA", fill = TRUE)
BHI_3 <- read.table("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_3'), na.strings = "NA", fill = TRUE)
Ser_1 <- read.table("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_1'), na.strings = "NA", fill = TRUE)
Ser_2 <- read.table("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_2'), na.strings = "NA", fill = TRUE)
Ser_3 <- read.table("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_3'), na.strings = "NA", fill = TRUE)
expData <- data.frame(BHI_1, BHI_2, BHI_3, Ser_1, Ser_2, Ser_3)
write.csv(expData, "Matrix_reads_gene.csv", row.names=T)
View(BHI_1)
View(BHI_1)
x <- read.csv2("BHI_ERR1797972_rep1.txt", fill = TRUE, na.strings = "NA")
View(x)
x <- read.csv2("BHI_ERR1797972_rep1.txt", sep = "\t", fill = TRUE, na.strings = "NA")
View(x)
x <- read.csv2("BHI_ERR1797972_rep1.txt", sep = "\t", na.strings = "NA", fill = TRUE)
View(x)
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.table("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), na.strings = "NA", fill = TRUE)
BHI_2 <- read.table("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_2'), na.strings = "NA", fill = TRUE)
BHI_3 <- read.table("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_3'), na.strings = "NA", fill = TRUE)
x <- read.csv2("BHI_ERR1797972_rep1.txt", sep = "\t", na.strings = "NA", fill = TRUE)
View(x)
View(BHI_3)
x <- read.csv2("BHI_ERR1797972_rep1.txt", sep = "\t")
View(x)
View(x)
BHI_1 <- read.table("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'))
x <- read.csv2("BHI_ERR1797972_rep1.txt", sep = "\t", na.strings = "NA", fill = TRUE)
View(x)
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
x <- read.csv2("BHI_ERR1797972_rep1.txt", sep = "\t", na.strings = "NA", fill = TRUE)
View(x)
BHI_1 <- read.csv2("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), sep = "\t", na.strings = "NA", fill = TRUE)
View(BHI_1)
BHI_1 <- read.csv2("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_2 <- read.csv2("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_2'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_3 <- read.csv2("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_3'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_1 <- read.csv2("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_1'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_2 <- read.csv2("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_2'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_3 <- read.csv2("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_3'), sep = "\t", na.strings = "NA", fill = TRUE)
expData <- data.frame(BHI_1, BHI_2, BHI_3, Ser_1, Ser_2, Ser_3)
write.csv(expData, "Matrix_reads_gene.csv", row.names=T)
View(expData)
View(expData)
BHI_1 <- read.csv2("BHI_ERR1797972_rep1.txt", row.names = 1, 2, col.names = c('ID', 'gene_name', 'count_BHI_1'), sep = "\t", na.strings = "NA", fill = TRUE)
View(BHI_1)
expData <- data.frame(BHI_1, BHI_2('count_BHI_2'), BHI_3, Ser_1, Ser_2, Ser_3)
expData <- data.frame(BHI_1, BHI_2(2), BHI_3, Ser_1, Ser_2, Ser_3)
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.csv2("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_2 <- read.csv2("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_2'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_3 <- read.csv2("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_3'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_1 <- read.csv2("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_1'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_2 <- read.csv2("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_2'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_3 <- read.csv2("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_3'), sep = "\t", na.strings = "NA", fill = TRUE)
expData <- data.frame(BHI_1['count_BHI_1'], BHI_2['count_BHI_2'], BHI_3['count_BHI_3'], Ser_1['count_ser_1'], Ser_2['count_ser_2'], Ser_3['count_ser_3'])
write.csv(expData, "Matrix_reads_gene.csv", row.names=T)
View(expData)
expData <- data.frame(BHI_1, BHI_2['count_BHI_2'], BHI_3['count_BHI_3'], Ser_1['count_ser_1'], Ser_2['count_ser_2'], Ser_3['count_ser_3'])
write.csv(expData, "Matrix_reads_gene.csv", row.names=T)
View(expData)
# get number of aligned reads for each experiment
totalReads <- colSums(expData)
notAlignedReads <- expData["__not_aligned",]
AlignedReads <- totalReads - notAlignedReads
#######
# get number of aligned reads in total
OverallTotalReads <- sum(totalReads)
OverallNotAlignedReads <- sum(notAlignedReads)
OverallAlignedReads <- sum(AlignedReads)
########
# percentual calculation of the overall number of reads that has mapped to the reference
PercentOverallAlignedReads <- OverallAlignedReads * 100 / OverallTotalReads
PercentOverallAlignedReads
##############
lenMatrix<-dim(expData)[1]
ReadsFeatures<-expData[1:(lenMatrix-5),]
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.csv2("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_2 <- read.csv2("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_2'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_3 <- read.csv2("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_3'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_1 <- read.csv2("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_1'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_2 <- read.csv2("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_2'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_3 <- read.csv2("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_3'), sep = "\t", na.strings = "NA", fill = TRUE)
expData <- data.frame(BHI_1, BHI_2['count_BHI_2'], BHI_3['count_BHI_3'], Ser_1['count_ser_1'], Ser_2['count_ser_2'], Ser_3['count_ser_3'])
write.csv(expData, "Matrix_reads_gene.csv", row.names=T)
#######
# get number of aligned reads for each experiment
totalReads <- colSums(expData)
notAlignedReads <- expData["__not_aligned",]
AlignedReads <- totalReads - notAlignedReads
#######
# get number of aligned reads in total
OverallTotalReads <- sum(totalReads)
OverallNotAlignedReads <- sum(notAlignedReads)
OverallAlignedReads <- sum(AlignedReads)
########
# percentual calculation of the overall number of reads that has mapped to the reference
PercentOverallAlignedReads <- OverallAlignedReads * 100 / OverallTotalReads
PercentOverallAlignedReads
##############
lenMatrix<-dim(expData)[1]
ReadsFeatures<-expData[1:(lenMatrix-5),]
View(ReadsFeatures)
OverallTotalReadsFeatures <- sum(colSums(ReadsFeatures))
PercentReadsFeatures <- OverallTotalReadsFeatures * 100 / OverallTotalReads
PercentReadsFeatures
OverallTotalReadsFeatures <- sum(colSums(ReadsFeatures))
OverallTotalReadsFeatures <- colSums(ReadsFeatures)
View(ReadsFeatures)
OverallTotalReadsFeatures <- sum(colSums(ReadsFeatures['count_BHI_1', 'count_BHI_2', 'count_BHI_3', 'count_ser_1', 'count_ser_2', 'count_ser_3']))
View(Ser_3)
OnlyNumCol %>% select(2:)
OnlyNumCol %>% select(2:7)
OnlyNumCol <- ReadsFeatures[c(2:7)]
View(OnlyNumCol)
OverallTotalReadsFeatures <- sum(colSums(OnlyNumCol))
PercentReadsFeatures <- OverallTotalReadsFeatures * 100 / OverallTotalReads
PercentReadsFeatures
PercentReadsFeatures <- OverallTotalReadsFeatures * 100 / OverallTotalReads
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.csv2("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_2 <- read.csv2("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_2'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_3 <- read.csv2("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_3'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_1 <- read.csv2("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_1'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_2 <- read.csv2("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_2'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_3 <- read.csv2("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_3'), sep = "\t", na.strings = "NA", fill = TRUE)
expData <- data.frame(BHI_1, BHI_2['count_BHI_2'], BHI_3['count_BHI_3'], Ser_1['count_ser_1'], Ser_2['count_ser_2'], Ser_3['count_ser_3'])
write.csv(expData, "Matrix_reads_gene.csv", row.names=T)
#######
# get number of aligned reads for each experiment
totalReads <- colSums(expData)
notAlignedReads <- expData["__not_aligned",]
AlignedReads <- totalReads - notAlignedReads
#######
# get number of aligned reads in total
OverallTotalReads <- sum(totalReads)
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.csv2("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_2 <- read.csv2("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_2'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_3 <- read.csv2("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_3'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_1 <- read.csv2("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_1'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_2 <- read.csv2("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_2'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_3 <- read.csv2("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_3'), sep = "\t", na.strings = "NA", fill = TRUE)
expData <- data.frame(BHI_1, BHI_2['count_BHI_2'], BHI_3['count_BHI_3'], Ser_1['count_ser_1'], Ser_2['count_ser_2'], Ser_3['count_ser_3'])
write.csv(expData, "Matrix_reads_gene.csv", row.names=T)
totalReads <- colSums(expData)
# get number of aligned reads for each experiment
OnlyNumCol <- expData[c(2:7)]
totalReads <- colSums(OnlyNumCol)
notAlignedReads <- OnlyNumCol["__not_aligned",]
AlignedReads <- totalReads - notAlignedReads
OverallTotalReads <- sum(totalReads)
OverallNotAlignedReads <- sum(notAlignedReads)
OverallAlignedReads <- sum(AlignedReads)
PercentOverallAlignedReads <- OverallAlignedReads * 100 / OverallTotalReads
PercentOverallAlignedReads
lenMatrix<-dim(OnlyNumCol)[1]
ReadsFeatures<-OnlyNumCol[1:(lenMatrix-5),]
#OnlyNumCol <- ReadsFeatures[c(2:7)]
OverallTotalReadsFeatures <- sum(colSums(OnlyNumCol))
PercentReadsFeatures <- OverallTotalReadsFeatures * 100 / OverallTotalReads
PercentReadsFeatures
OverallNoFeatures <- sum(expData["__no_feature",])
OverallNoFeatures
OverallNoFeatures <- sum(OnlyNumCol["__no_feature",])
OverallNoFeatures
View(notAlignedReads)
View(AlignedReads)
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.csv2("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_2 <- read.csv2("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_2'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_3 <- read.csv2("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_3'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_1 <- read.csv2("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_1'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_2 <- read.csv2("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_2'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_3 <- read.csv2("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_3'), sep = "\t", na.strings = "NA", fill = TRUE)
expData <- data.frame(BHI_1, BHI_2['count_BHI_2'], BHI_3['count_BHI_3'], Ser_1['count_ser_1'], Ser_2['count_ser_2'], Ser_3['count_ser_3'])
write.csv(expData, "Matrix_reads_gene.csv", row.names=T)
#######
# get number of aligned reads for each experiment
OnlyNumCol <- expData[c(2:7)]
totalReads <- colSums(OnlyNumCol)
notAlignedReads <- OnlyNumCol["__not_aligned",]
AlignedReads <- totalReads - notAlignedReads
#######
# get number of aligned reads in total
OverallTotalReads <- sum(totalReads)
OverallNotAlignedReads <- sum(notAlignedReads)
OverallAlignedReads <- sum(AlignedReads)
########
# percentual calculation of the overall number of reads that has mapped to the reference
PercentOverallAlignedReads <- OverallAlignedReads * 100 / OverallTotalReads
PercentOverallAlignedReads
##############
# remove the table from the end of the files and save that matrix
lenMatrix<-dim(OnlyNumCol)[1]
ReadsFeatures<-OnlyNumCol[1:(lenMatrix-5),]
#OnlyNumCol <- ReadsFeatures[c(2:7)]
OverallTotalReadsFeatures <- sum(colSums(OnlyNumCol))
PercentReadsFeatures <- OverallTotalReadsFeatures * 100 / OverallTotalReads
PercentReadsFeatures
OverallNoFeatures <- sum(OnlyNumCol["__no_feature",])
OverallNoFeatures
View(AlignedReads)
percentAlignedReads <- AlignedReads * 100 / totalReads
View(percentAlignedReads)
write.csv(percentAlignedReads, "percentAlignedReads.csv", row.names=T)
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.csv2("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_2 <- read.csv2("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_2'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_3 <- read.csv2("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_3'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_1 <- read.csv2("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_1'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_2 <- read.csv2("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_2'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_3 <- read.csv2("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_3'), sep = "\t", na.strings = "NA", fill = TRUE)
expData <- data.frame(BHI_1, BHI_2['count_BHI_2'], BHI_3['count_BHI_3'], Ser_1['count_ser_1'], Ser_2['count_ser_2'], Ser_3['count_ser_3'])
write.csv(expData, "Matrix_reads_gene.csv", row.names=T)
#######
# get number of aligned reads for each experiment
OnlyNumCol <- expData[c(2:7)]
totalReads <- colSums(OnlyNumCol)
notAlignedReads <- OnlyNumCol["__not_aligned",]
AlignedReads <- totalReads - notAlignedReads
percentAlignedReads <- OverallAlignedReads * 100 / OverallTotalReads
#######
# get number of aligned reads in total
OverallTotalReads <- sum(totalReads)
OverallNotAlignedReads <- sum(notAlignedReads)
OverallAlignedReads <- sum(AlignedReads)
########
# percentual calculation of the overall number of reads that has mapped to the reference
PercentOverallAlignedReads <- OverallAlignedReads * 100 / OverallTotalReads
PercentOverallAlignedReads
##############
# remove the table from the end of the files and save that matrix
lenMatrix<-dim(OnlyNumCol)[1]
ReadsFeatures<-OnlyNumCol[1:(lenMatrix-5),]
#OnlyNumCol <- ReadsFeatures[c(2:7)]
OverallTotalReadsFeatures <- sum(colSums(OnlyNumCol))
PercentReadsFeatures <- OverallTotalReadsFeatures * 100 / OverallTotalReads
PercentReadsFeatures
OverallNoFeatures <- sum(OnlyNumCol["__no_feature",])
OverallNoFeatures
View(notAlignedReads)
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.csv2("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_2 <- read.csv2("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_2'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_3 <- read.csv2("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_3'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_1 <- read.csv2("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_1'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_2 <- read.csv2("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_2'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_3 <- read.csv2("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_3'), sep = "\t", na.strings = "NA", fill = TRUE)
expData <- data.frame(BHI_1, BHI_2['count_BHI_2'], BHI_3['count_BHI_3'], Ser_1['count_ser_1'], Ser_2['count_ser_2'], Ser_3['count_ser_3'])
#write.csv(expData, "Matrix_reads_gene.csv", row.names=T)
#############################################
hist(expData[,1], main="Distribution of RNA reads", xlab="Counts")
log2_counts <- log2(expData+1)
boxplot(log2_counts, main="Distribution of log2-normalized Read Counts")
hist(log2_counts[,1], main="Histogram of ERR1797972 log2-normalized Count Data", xlab="Counts")
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.csv2("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_2 <- read.csv2("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_2'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_3 <- read.csv2("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_3'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_1 <- read.csv2("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_1'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_2 <- read.csv2("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_2'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_3 <- read.csv2("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_3'), sep = "\t", na.strings = "NA", fill = TRUE)
expData <- data.frame(BHI_1, BHI_2['count_BHI_2'], BHI_3['count_BHI_3'], Ser_1['count_ser_1'], Ser_2['count_ser_2'], Ser_3['count_ser_3'])
#write.csv(expData, "Matrix_reads_gene.csv", row.names=T)
#############################################
hist(expData[,1], main="Distribution of RNA reads", xlab="Counts")
hist(OnlyNumCol[,1], main="Distribution of RNA reads", xlab="Counts")
# get number of aligned reads for each experiment
OnlyNumCol <- expData[c(2:7)]
# Distribution of mapped reads
hist(OnlyNumCol[,1], main="Distribution of RNA reads", xlab="Counts")
log2_counts <- log2(OnlyNumCol+1)
boxplot(log2_counts, main="Distribution of log2-normalized Read Counts")
hist(log2_counts[,1], main="Histogram of ERR1797972 log2-normalized Count Data", xlab="Counts")
boxplot(log2_counts, main="Distribution of log2-normalized RNA reads data")
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.csv2("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_2 <- read.csv2("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_2'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_3 <- read.csv2("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_3'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_1 <- read.csv2("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_1'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_2 <- read.csv2("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_2'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_3 <- read.csv2("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_3'), sep = "\t", na.strings = "NA", fill = TRUE)
expData <- data.frame(BHI_1, BHI_2['count_BHI_2'], BHI_3['count_BHI_3'], Ser_1['count_ser_1'], Ser_2['count_ser_2'], Ser_3['count_ser_3'])
#write.csv(expData, "Matrix_reads_gene.csv", row.names=T)
#############################################
# get number of aligned reads for each experiment
OnlyNumCol <- expData[c(2:7)]
# Distribution of mapped reads
hist(OnlyNumCol[,1], main="Distribution of RNA reads", xlab="Counts")
log2_counts <- log2(OnlyNumCol+1)
boxplot(log2_counts, main="Distribution of log2-normalized RNA reads data")
hist(log2_counts[,1], main="Distribution of RNA reads_log2-normalized", xlab="Counts")
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.csv2("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_2 <- read.csv2("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_2'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_3 <- read.csv2("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_3'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_1 <- read.csv2("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_1'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_2 <- read.csv2("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_2'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_3 <- read.csv2("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_3'), sep = "\t", na.strings = "NA", fill = TRUE)
expData <- data.frame(BHI_1, BHI_2['count_BHI_2'], BHI_3['count_BHI_3'], Ser_1['count_ser_1'], Ser_2['count_ser_2'], Ser_3['count_ser_3'])
#write.csv(expData, "Matrix_reads_gene.csv", row.names=T)
#############################################
# get number of aligned reads for each experiment
OnlyNumCol <- expData[c(2:7)]
# Distribution of mapped reads
hist(OnlyNumCol[,1], main="Distribution of RNA reads", xlab="Counts")
log2_counts <- log2(OnlyNumCol+1)
boxplot(log2_counts, main="Distribution of log2-normalized RNA reads data")
hist(log2_counts[,1], main="Distribution of log2-normalized RNA reads data", xlab="Counts")
setwd('/home/ferall/Dropbox/0MSc_Bioinfo_Uppsala/Sem1_1MB462_Genome_Analysis/2020.03_GenomeAnalysisCourse/Counts/11_RNA_htseq_ID_gene')
# create a matrix that has all the gene counts from all 3 repeats of the 2 experimental conditions
BHI_1 <- read.csv2("BHI_ERR1797972_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_1'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_2 <- read.csv2("BHI_ERR1797973_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_2'), sep = "\t", na.strings = "NA", fill = TRUE)
BHI_3 <- read.csv2("BHI_ERR1797974_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_BHI_3'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_1 <- read.csv2("serum_ERR1797969_rep1.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_1'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_2 <- read.csv2("serum_ERR1797970_rep2.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_2'), sep = "\t", na.strings = "NA", fill = TRUE)
Ser_3 <- read.csv2("serum_ERR1797971_rep3.txt", row.names = 1, col.names = c('ID', 'gene_name', 'count_ser_3'), sep = "\t", na.strings = "NA", fill = TRUE)
expData <- data.frame(BHI_1, BHI_2['count_BHI_2'], BHI_3['count_BHI_3'], Ser_1['count_ser_1'], Ser_2['count_ser_2'], Ser_3['count_ser_3'])
#write.csv(expData, "Matrix_reads_gene.csv", row.names=T)
#############################################
# get number of aligned reads for each experiment
OnlyNumCol <- expData[c(2:7)]
# Distribution of mapped reads
hist(OnlyNumCol[,1], main="Distribution of RNA reads", xlab="Counts")
log2_counts <- log2(OnlyNumCol+1)
boxplot(log2_counts, main="Distribution of log2-normalized RNA reads data")
hist(log2_counts[,1], main="Distribution of log2-normalized RNA reads data", xlab="Counts")
